start
install_basic_classes
Add basic classTable... 
End 
Now let's build inheritence graph
Main parent is Object
A parent is Object
check ring ablout Main
check ring ablout A
Now Lets install Method ...
Current Class:Main
Adding method : main
Current Class:Object
Adding method : abort
Adding method : type_name
Adding method : copy
Current Class:Int
Current Class:A
Adding method : f
Adding method : g
Adding method : h
Current Class:String
Adding method : length
Adding method : concat
Adding method : substr
Current Class:Bool
Current Class:IO
Adding method : out_string
Adding method : out_int
Adding method : in_string
Adding method : in_int
Check Method type :Main
Check Method type :Object
Check Method type :Int
Check Method type :A
Check Method type :String
Check Method type :Bool
Check Method type :IO
Checking method :main
testing... 
testing... end
Adding attribute :x
Checking attribute: x:Int
NO INIT
Checking attribute:x end
Checking method :f
Add x:A into Objecttable
testing... 
check str:String
testing... end
Checking method :g
Add x:Bool into Objecttable
testing... 
testing... end
Checking method :h
testing... 
checking dispatch type f
Dispatch: Class_type:SELF_TYPE,functionName:f,curr_class: A
Find method name f:A:A
checking dispatch type g
Dispatch: Class_type:SELF_TYPE,functionName:g,curr_class: A
Find method name g:A:A
params type is Bool
formal_type is Bool
params type is A
formal_type is A
 Checking assign x
check str:String
testing... end
#1
_program
  #1
  _class
    Main
    Object
    "./scopes.test"
    (
    #1
    _method
      main
      Int
      #1
      _int
        0
      : Int
    )
  #3
  _class
    A
    Object
    "./scopes.test"
    (
    #4
    _attr
      x
      Int
      #0
      _no_expr
      : _no_type
    #6
    _method
      f
      #6
      _formal
        x
        A
      String
      #6
      _string
        "ab"
      : String
    #7
    _method
      g
      #7
      _formal
        x
        Bool
      A
      #7
      _object
        self
      : SELF_TYPE
    #8
    _method
      h
      Object
      #8
      _let
        x
        String
        #8
        _dispatch
          #8
          _object
            self
          : SELF_TYPE
          f
          (
          #8
          _let
            x
            Bool
            #0
            _no_expr
            : _no_type
            #8
            _dispatch
              #8
              _object
                self
              : SELF_TYPE
              g
              (
              #8
              _object
                x
              : Bool
              )
            : A
          : A
          )
        : String
        #8
        _assign
          x
          #8
          _string
            "ab"
          : String
        : String
      : String
    )

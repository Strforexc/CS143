1,606c1,103
< 
< _program
< 
<   _class
<     CellularAutomaton
<     IO
<     filename
<     (
< 
<     _attr
<       population_map
<       String
< 
<       _no_expr
<       : _no_type
< 
<     _method
<       init
< 
<       _formal
<         map
<         String
<       SELF_TYPE
< 
<       _block
< 
<         _assign
<           population_map
< 
<           _object
<             map
<           : String
<         : String
< 
<         _object
<           self
<         : SELF_TYPE
<       : SELF_TYPE
< 
<     _method
<       print
<       SELF_TYPE
< 
<       _block
< 
<         _dispatch
< 
<           _object
<             self
<           : SELF_TYPE
<           out_string
<           (
< 
<           _dispatch
< 
<             _object
<               population_map
<             : String
<             concat
<             (
< 
<             _string
<               "\n"
<             : String
<             )
<           : String
<           )
<         : SELF_TYPE
< 
<         _object
<           self
<         : SELF_TYPE
<       : SELF_TYPE
< 
<     _method
<       num_cells
<       Int
< 
<       _dispatch
< 
<         _object
<           population_map
<         : String
<         length
<         (
<         )
<       : Int
< 
<     _method
<       cell
< 
<       _formal
<         position
<         Int
<       String
< 
<       _dispatch
< 
<         _object
<           population_map
<         : String
<         substr
<         (
< 
<         _object
<           position
<         : Int
< 
<         _int
<           1
<         : Int
<         )
<       : String
< 
<     _method
<       cell_left_neighbor
< 
<       _formal
<         position
<         Int
<       String
< 
<       _cond
< 
<         _eq
< 
<           _object
<             position
<           : Int
< 
<           _int
<             0
<           : Int
<         : Bool
< 
<         _dispatch
< 
<           _object
<             self
<           : SELF_TYPE
<           cell
<           (
< 
<           _sub
< 
<             _dispatch
< 
<               _object
<                 self
<               : SELF_TYPE
<               num_cells
<               (
<               )
<             : Int
< 
<             _int
<               1
<             : Int
<           : Int
<           )
<         : String
< 
<         _dispatch
< 
<           _object
<             self
<           : SELF_TYPE
<           cell
<           (
< 
<           _sub
< 
<             _object
<               position
<             : Int
< 
<             _int
<               1
<             : Int
<           : Int
<           )
<         : String
<       : String
< 
<     _method
<       cell_right_neighbor
< 
<       _formal
<         position
<         Int
<       String
< 
<       _cond
< 
<         _eq
< 
<           _object
<             position
<           : Int
< 
<           _sub
< 
<             _dispatch
< 
<               _object
<                 self
<               : SELF_TYPE
<               num_cells
<               (
<               )
<             : Int
< 
<             _int
<               1
<             : Int
<           : Int
<         : Bool
< 
<         _dispatch
< 
<           _object
<             self
<           : SELF_TYPE
<           cell
<           (
< 
<           _int
<             0
<           : Int
<           )
<         : String
< 
<         _dispatch
< 
<           _object
<             self
<           : SELF_TYPE
<           cell
<           (
< 
<           _plus
< 
<             _object
<               position
<             : Int
< 
<             _int
<               1
<             : Int
<           : Int
<           )
<         : String
<       : String
< 
<     _method
<       cell_at_next_evolution
< 
<       _formal
<         position
<         Int
<       String
< 
<       _cond
< 
<         _eq
< 
<           _plus
< 
<             _plus
< 
<               _cond
< 
<                 _eq
< 
<                   _dispatch
< 
<                     _object
<                       self
<                     : SELF_TYPE
<                     cell
<                     (
< 
<                     _object
<                       position
<                     : Int
<                     )
<                   : String
< 
<                   _string
<                     "X"
<                   : String
<                 : Bool
< 
<                 _int
<                   1
<                 : Int
< 
<                 _int
<                   0
<                 : Int
<               : Int
< 
<               _cond
< 
<                 _eq
< 
<                   _dispatch
< 
<                     _object
<                       self
<                     : SELF_TYPE
<                     cell_left_neighbor
<                     (
< 
<                     _object
<                       position
<                     : Int
<                     )
<                   : String
< 
<                   _string
<                     "X"
<                   : String
<                 : Bool
< 
<                 _int
<                   1
<                 : Int
< 
<                 _int
<                   0
<                 : Int
<               : Int
<             : Int
< 
<             _cond
< 
<               _eq
< 
<                 _dispatch
< 
<                   _object
<                     self
<                   : SELF_TYPE
<                   cell_right_neighbor
<                   (
< 
<                   _object
<                     position
<                   : Int
<                   )
<                 : String
< 
<                 _string
<                   "X"
<                 : String
<               : Bool
< 
<               _int
<                 1
<               : Int
< 
<               _int
<                 0
<               : Int
<             : Int
<           : Int
< 
<           _int
<             1
<           : Int
<         : Bool
< 
<         _string
<           "X"
<         : String
< 
<         _string
<           "."
<         : String
<       : String
< 
<     _method
<       evolve
<       SELF_TYPE
< 
<       _let
<         position
<         Int
< 
<         _no_expr
<         : _no_type
< 
<         _let
<           num
<           Int
< 
<           _dispatch
< 
<             _object
<               self
<             : SELF_TYPE
<             num_cells
<             (
<             )
<           : Int
< 
<           _let
<             temp
<             String
< 
<             _no_expr
<             : _no_type
< 
<             _block
< 
<               _loop
< 
<                 _lt
< 
<                   _object
<                     position
<                   : Int
< 
<                   _object
<                     num
<                   : Int
<                 : Bool
< 
<                 _block
< 
<                   _assign
<                     temp
< 
<                     _dispatch
< 
<                       _object
<                         temp
<                       : String
<                       concat
<                       (
< 
<                       _dispatch
< 
<                         _object
<                           self
<                         : SELF_TYPE
<                         cell_at_next_evolution
<                         (
< 
<                         _object
<                           position
<                         : Int
<                         )
<                       : String
<                       )
<                     : String
<                   : String
< 
<                   _assign
<                     position
< 
<                     _plus
< 
<                       _object
<                         position
<                       : Int
< 
<                       _int
<                         1
<                       : Int
<                     : Int
<                   : Int
<                 : Int
<               : Object
< 
<               _assign
<                 population_map
< 
<                 _object
<                   temp
<                 : String
<               : String
< 
<               _object
<                 self
<               : SELF_TYPE
<             : SELF_TYPE
<           : SELF_TYPE
<         : SELF_TYPE
<       : SELF_TYPE
<     )
< 
<   _class
<     Main
<     Object
<     filename
<     (
< 
<     _attr
<       cells
<       CellularAutomaton
< 
<       _no_expr
<       : _no_type
< 
<     _method
<       main
<       SELF_TYPE
< 
<       _block
< 
<         _assign
<           cells
< 
<           _dispatch
< 
<             _new
<               CellularAutomaton
<             : CellularAutomaton
<             init
<             (
< 
<             _string
<               "         X         "
<             : String
<             )
<           : CellularAutomaton
<         : CellularAutomaton
< 
<         _dispatch
< 
<           _object
<             cells
<           : CellularAutomaton
<           print
<           (
<           )
<         : CellularAutomaton
< 
<         _let
<           countdown
<           Int
< 
<           _int
<             20
<           : Int
< 
<           _loop
< 
<             _lt
< 
<               _int
<                 0
<               : Int
< 
<               _object
<                 countdown
<               : Int
<             : Bool
< 
<             _block
< 
<               _dispatch
< 
<                 _object
<                   cells
<                 : CellularAutomaton
<                 evolve
<                 (
<                 )
<               : CellularAutomaton
< 
<               _dispatch
< 
<                 _object
<                   cells
<                 : CellularAutomaton
<                 print
<                 (
<                 )
<               : CellularAutomaton
< 
<               _assign
<                 countdown
< 
<                 _sub
< 
<                   _object
<                     countdown
<                   : Int
< 
<                   _int
<                     1
<                   : Int
<                 : Int
<               : Int
<             : Int
<           : Object
<         : Object
< 
<         _object
<           self
<         : SELF_TYPE
<       : SELF_TYPE
<     )
---
> start
> install_basic_classes
> Add basic classTable... 
> End 
> Now let's build inheritence graph
> CellularAutomaton parent is IO
> Main parent is Object
> check ring ablout CellularAutomaton
> check ring ablout Main
> Now Lets install Method ...
> Current Class:CellularAutomaton
> Adding method : init
> Adding method : print
> Adding method : num_cells
> Adding method : cell
> Adding method : cell_left_neighbor
> Adding method : cell_right_neighbor
> Adding method : cell_at_next_evolution
> Adding method : evolve
> Current Class:IO
> Adding method : out_string
> Adding method : out_int
> Adding method : in_string
> Adding method : in_int
> Current Class:String
> Adding method : length
> Adding method : concat
> Adding method : substr
> Current Class:Int
> Current Class:Main
> Adding method : main
> Current Class:Object
> Adding method : abort
> Adding method : type_name
> Adding method : copy
> Current Class:Bool
> Check Method type :CellularAutomaton
> Check Method type :IO
> Check Method type :String
> Check Method type :Int
> Check Method type :Main
> Check Method type :Object
> Check Method type :Bool
> Adding attribute :population_map
> Checking attribute: population_map:String
> NO INIT
> Checking attribute:population_map end
> Checking method :init
> Add map:String into Objecttable
> testing... 
>  Checking assign population_map
> testing... end
> Checking method :print
> testing... 
> checking dispatch type out_string
> Dispatch: Class_type:SELF_TYPE,functionName:out_string,curr_class: CellularAutomaton
> Find method name out_string:CellularAutomaton:CellularAutomaton
> Find method name out_string:CellularAutomaton:IO
> checking dispatch type concat
> Dispatch: class = String
> Find method name concat:String:String
> check str:String
> params type is String
> formal_type is String
> params type is String
> formal_type is String
> testing... end
> Checking method :num_cells
> testing... 
> checking dispatch type length
> Dispatch: class = String
> Find method name length:String:String
> testing... end
> Checking method :cell
> Add position:Int into Objecttable
> testing... 
> checking dispatch type substr
> Dispatch: class = String
> Find method name substr:String:String
> params type is Int
> formal_type is Int
> params type is Int
> formal_type is Int
> testing... end
> Checking method :cell_left_neighbor
> Add position:Int into Objecttable
> testing... 
> Checking eq
> checking dispatch type cell
> Dispatch: Class_type:SELF_TYPE,functionName:cell,curr_class: CellularAutomaton
> Find method name cell:CellularAutomaton:CellularAutomaton
> checking dispatch type num_cells
> Dispatch: Class_type:SELF_TYPE,functionName:num_cells,curr_class: CellularAutomaton
> Find method name num_cells:CellularAutomaton:CellularAutomaton
> params type is Int
> formal_type is Int
> checking dispatch type cell
> Dispatch: Class_type:SELF_TYPE,functionName:cell,curr_class: CellularAutomaton
> Find method name cell:CellularAutomaton:CellularAutomaton
> params type is Int
> formal_type is Int
> free(): invalid pointer
>   (core dumped)
